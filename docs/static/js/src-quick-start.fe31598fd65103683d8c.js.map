{"version":3,"sources":["webpack:///./src/quick_start.mdx"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","href","className"],"mappings":"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","file":"static/js/src-quick-start.d740560e.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"quick-start\"}}>{`Quick start`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"build-your-first-application\"}}>{`Build your first application`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The easiest way to get started is to skip installing everything on your local machine and just use our fully hosted IDE environment.  To do this:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Go to `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://studio.nearprotocol.com\"}}>{`NEAR Studio`}</MDXTag>{` and select the \"ToDo MVC\" template.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Click \"Run\" to see the app running!`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The app will open in a new window. It's using the blockchain as its backend.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`A few things to note:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The code that runs on blockchain is in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`assembly/main.ts`}</MDXTag>{` file.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The JavaScript frontend code is in the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`src/main.js`}</MDXTag>{` file.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The UI markup is in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`src/main.html file`}</MDXTag>{`.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Try changing any of these files. To see your changes, click the \"Save\" button, and then \"Run\" button.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"try-the-block-explorer--debugger\"}}>{`Try the block explorer / debugger`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Once you have tested out the NEAR Studio IDE, check out the Block Explorer (aka Debugger).`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Navigate to `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://studio.nearprotocol.com/debugger/\"}}>{`https://studio.nearprotocol.com/debugger/`}</MDXTag>{` in your browser to see information on specific blocks and transactions from those blocks.  This is a useful tool when you are trying to debug your contracts.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Another very useful tool is to open up your console's JavaScript console, where you will be able to print logs and errors.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"build--run-a-node-from-source\"}}>{`Build & Run a node from source`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You should be able to do anything you want with the above-mentioned NEAR Studio IDE and the Block Explorer.  If you want to keep digging deeper, try running the local DevNet yourself.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`\"DevNet\" is a locally hosted single-node \"blockchain\" that runs WebAssembly and State transition without actually running full blockchain/consensus functionality.  Essentially, you can interact with it as if it was a blockchain for the purposes of writing and testing code.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This is exactly what currently runs the DevNet that supports apps deployed using the NEAR Studio IDE (though that DevNet is hosted in the cloud by us).`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In this case, we'll walk through how you can set up your own local DevNet.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\">{`Note that this will be more fragile and prone to weird errors at this stage of the development cycle!  If you're trying to build an app, we recommend staying in NEAR Studio for now!`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"1-setup-rust\"}}>{`1. Setup Rust:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`\\$ curl https://sh.rustup.rs -sSf | sh\n// You may need to restart the terminal to use the new PATH\n\\$ rustup component add clippy-preview\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`You may need to activate the environment via `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`. ~/.cargo/env`}</MDXTag>{` to use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`cargo`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"2-download-near-core-code\"}}>{`2. Download NEAR Core code:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`\\$ git clone https://github.com/nearprotocol/nearcore\n\\$ cd nearcore\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"3-set-up-your-keypair\"}}>{`3. Set up your keypair`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`First, generate a cryptographic key pair.  The code below will save a pair of keys into the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`keystore`}</MDXTag>{` folder to use with `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`rpc.py`}</MDXTag>{`:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`cargo run --package keystore -- keygen --test-seed alice.near\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"4-build-devnet\"}}>{`4. Build DevNet`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`After following the instructions above to set up Rust, download the source code, build and then run DevNet:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`cargo run --release --package=devnet\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`-- --log-level debug`}</MDXTag>{` to see more information about RPC and transaction processing. For more flags use `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`-- --help`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"5-test-it-out\"}}>{`5. Test it Out`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Try submitting transactions or views via `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://www.jsonrpc.org/specification\"}}>{`JSON RPC`}</MDXTag>{`. There is a Python script that wraps the RPC:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`# See usage of rpc helper script\n./scripts/rpc.py --help\n\n# Get usage of sub command\n./scripts/rpc.py send_money --help\n\n# Send money\n./scripts/rpc.py send_money -r bob.near -a 1\n\n# Create a new account for the contract\n./scripts/rpc.py create_account test_contract 1\n\n# Deploy code for the smart contract account\n./scripts/rpc.py deploy test_contract tests/hello.wasm\n\n# Call method 'setValue' for contract 'test_contract' and pass arguments\n./scripts/rpc.py schedule_function_call test_contract setValue --args '{\"value\":\"testtest\"}'\n\n# Call view function 'getValue' for contract 'test_contract'\n./scripts/rpc.py call_view_function test_contract getValue\n\n# Call view function 'benchmark_sum_n' for contract 'test_contract' and pass n=500000\n./scripts/rpc.py call_view_function test_contract benchmark_sum_n --args='{\"n\":500000}'\n\n# View state for Bob's account\n./scripts/rpc.py view_account -a bob.near\n\n# Create an account\n./scripts/rpc.py create_account cindy 1\n\n# View full state db of the contract\n./scripts/rpc.py view_state test_contract\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"running-testnet-locally\"}}>{`Running TestNet locally`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\">{`Note: This is advanced functionality which may be more brittle than usual. Proceed at your own peril.`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Navigate to the root of the project. To start the network from a new state remove the storage:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`rm -rf test1 test2\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Launch the boot node:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`cargo run -- --addr 127.0.0.1:3000 --rpc_port 3030 --base-path=test1 --test-network-key-seed 1 --chain-spec-file ./node/configs/res/testnet_chain.json\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`The boot node will print the string that we can use to boot from it. For example:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`To boot from this node: 127.0.0.1:3000/GuMriipt4yUXfkZL2z3zLPbYaozkZG6zjV6vg4QruEvY\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Launch the second node using the first one as the boot:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`cargo run -- -a bob.near --addr 127.0.0.1:3001 --rpc_port 3031 --base-path=test2 --test-network-key-seed 2 --chain-spec-file ./node/configs/res/testnet_chain.json --boot-nodes 127.0.0.1:3000/GuMriipt4yUXfkZL2z3zLPbYaozkZG6zjV6vg4QruEvY\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Submit account creation transaction on one node:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`./scripts/rpc.py create_account jason 1 --public-key 22skMptHjFWNyuEWY22ftn2AbLPSYpmYwGJRGwpNHbTV\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Verify that the account was created by checking it on the other node:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`./scripts/rpc.py view_account -a jason -u http://127.0.0.1:3031/\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}