{"version":3,"sources":["webpack:///./src/quick_start.mdx"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","href","src","width","className"],"mappings":"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","file":"static/js/src-quick-start.0ed0ee97.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"quick-start\"}}>{`Quick start`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`There are several options for quick start, depending on what you are trying to do:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Easy:`}</MDXTag>{` Build your first application in the NEAR Studio IDE`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Medium:`}</MDXTag>{` Use NEAR with an existing front-end`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Advanced:`}</MDXTag>{` Build and run a local DevNet node`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Expert:`}</MDXTag>{` Build and run a local multi-node AlphaNet`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We have 3 development environments currently available:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Local DevNet:`}</MDXTag>{` You run this node in your local environment.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Hosted DevNet:`}</MDXTag>{` NEAR hosts a single-node DevNet in the cloud. This is currently the default pointed to by our online Studio IDE, Block Explorer and Wallet.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\"><MDXTag name=\"strong\" components={components} parentName=\"li\">{`Hosted AlphaNet:`}</MDXTag>{` NEAR hosts a multi-node AlphaNet in the cloud.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\">{`Blocks on the DevNets are not produced continuously -- they are only created when needed (so you can't necessarily rely on them for timing purposes).`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Quick reference: `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/nearprotocol/integration-quickstart\"}}>{`Link to the Hackathon Quickstart Vagrant box`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"easy-build-your-first-application-in-the-near-studio-ide\"}}>{`Easy: Build your first application in the NEAR Studio IDE`}</MDXTag>\n<img src =\"https://github.com/nearprotocol/NEARStudio/raw/master/demos/guest_book.gif\" width=\"600px\"/>\n<MDXTag name=\"p\" components={components}>{`The easiest way to get started is to skip installing everything on your local machine and just use our fully hosted IDE environment. We have a number of pre-built templates which you can use as starter apps.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`To do this:`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Go to `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://studio.nearprotocol.com\"}}>{`NEAR Studio`}</MDXTag>{` and select the \"ToDo MVC\" template.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Click \"Run\" to see the app running!`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The app will open in a new window.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\">{`Environment: The smart contract for this is deployed to our hosted single-node DevNet while the front end is deployed to our hosted app.near.ai site.`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`A few notes:`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The code that runs on blockchain is in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`assembly/main.ts`}</MDXTag>{` file.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The JavaScript frontend code is in the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`src/main.js`}</MDXTag>{` file.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The UI markup is in `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`src/main.html file`}</MDXTag>{`.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Try changing any of these files. To see your changes, click the \"Save\" button, and then \"Run\" button.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"strong\" components={components} parentName=\"p\">{`Useful interactions with Studio:`}</MDXTag></MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`\"Test\"`}</MDXTag>{` button will run the JavaScript tests that are described in the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`src/test.js`}</MDXTag>{` file.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`\"Run\"`}</MDXTag>{` button will deploy your front end (the stuff in the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`src/`}</MDXTag>{` folder) to our hosted service on `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`app.near.ai/YOUR_UNIQUE_URL/`}</MDXTag>{`.  It's sort of like Github Pages.`}<MDXTag name=\"ul\" components={components} parentName=\"li\">\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Share the URL with someone else and they will be able to interact with your application. Make sure to remember the trailing `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`/`}</MDXTag></MDXTag>\n</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The `}<MDXTag name=\"strong\" components={components} parentName=\"li\">{`\"Fork\"`}</MDXTag>{` button will duplicate the existing code in a new page with a new URL. If you don't want to lose the old URL, copy/paste it somewhere.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"medium-use-near-in-an-existing-app\"}}>{`Medium: Use NEAR in an existing app`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If you have an app with an existing front-end that you want to hook into the smart contract on the back end, you will need to import our JavaScript SDK on the front-end and write/deploy the smart contract on the back end.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"1-import-the-sdk-on-your-front-end\"}}>{`1. Import the SDK on your front end`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`<script src=\"https://cdn.jsdelivr.net/npm/nearlib@0.2.4/dist/nearlib.js\"></script>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"2-write-the-smart-contract\"}}>{`2. Write the smart contract`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Write the code!`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"3-deploy-the-smart-contract\"}}>{`3. Deploy the smart contract`}</MDXTag>\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"option-a-deploy-to-your-local-devnet\"}}>{`Option A: Deploy to your local DevNet`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You will need to build and run a local DevNet node. See the following section for how to do this.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Once you have done this, make sure you are within the application's directory and run:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`npm install\nnpm run build\nnpm run-script deploy -- --contract guestbook\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"option-b-deploy-to-our-hosted-devnet\"}}>{`Option B: Deploy to our hosted DevNet`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Deploy your contract to the same DevNet which the NEAR Studio IDE deploys to.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`TODO: @Jane`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"try-the-block-explorer--debugger\"}}>{`Try the block explorer / debugger`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Once you have tested out the NEAR Studio IDE, check out the Block Explorer (aka Debugger).`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Navigate to `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://studio.nearprotocol.com/debugger/\"}}>{`https://studio.nearprotocol.com/debugger/`}</MDXTag>{` in your browser to see information on specific blocks and transactions from those blocks.  This is a useful tool when you are trying to debug your contracts.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Another very useful tool is to open up your console's JavaScript console, where you will be able to print logs and errors.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"advanced-build--run-a-local-devnet-node\"}}>{`Advanced: Build & run a local DevNet node`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You should be able to do anything you want with the above-mentioned NEAR Studio IDE and the Block Explorer.  If you want to keep digging deeper, try running the local DevNet yourself.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`\"DevNet\" is a single-node \"blockchain\" that runs WebAssembly and state transition without actually running the full blockchain/consensus functionality.  Essentially, you can interact with it as if it was a multi-node blockchain for the purposes of writing and testing code.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You can run your own DevNet locally by installing and running a node, which will produce blocks. The core NEAR node client is written using the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://www.rust-lang.org/\"}}>{`Rust language`}</MDXTag>{`, which uses `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/rust-lang/cargo\"}}>{`Cargo`}</MDXTag>{` to manage packages (similar to NPM).`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"1-setup-rust--dependencies\"}}>{`1. Setup Rust & dependencies`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The most up-to-date procedure for installing and running a node is provided in the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/nearprotocol/nearcore\"}}>{`README for the nearcore library on Github`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Follow the steps in that README to get Rust, Cargo and the nearcore library set up.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"2-run-the-node\"}}>{`2. Run the node`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Once everything is installed, you should be able to run DevNet with:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`cargo run --package=devnet\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"3-deploy-your-app-to-devnet\"}}>{`3. Deploy your app to DevNet`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`After you have an app locally developed, you can deploy it to the local DevNet.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`TODO: @Jane`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"4-optional-play-with-your-node\"}}>{`4 (Optional). Play with your node!`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Execute the following in the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`nearcore`}</MDXTag>{` folder to run some Python scripts which will help you test that your DevNet is working properly:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-bash\"}}>{`# Install pynear\ncd pynear\n# sudo may be required if you are not testing with a python virtual environment\npython setup.py develop\n\n# See usage of rpc helper script\npynear --help\n\n# Get usage of sub command\npynear send_money --help\n\n# Send money\npynear send_money -r bob.near -a 1\n\n# Create a new account for the contract\npynear create_account test_contract 1\n\n# Deploy code for the smart contract account\npynear deploy test_contract tests/hello.wasm\n\n# Call method 'setValue' for contract 'test_contract' and pass arguments\npynear schedule_function_call test_contract setValue --args '{\"value\":\"testtest\"}'\n\n# Call view function 'getValue' for contract 'test_contract'\npynear call_view_function test_contract getValue\n\n# Call view function 'benchmark_sum_n' for contract 'test_contract' and pass n=500000\npynear call_view_function test_contract benchmark_sum_n --args='{\"n\":500000}'\n\n# View state for Bob's account\npynear view_account -a bob.near\n\n# Create an account\npynear create_account cindy 1\n\n# View full state db of the contract\npynear view_state test_contract\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"expert-running-a-multi-node-alphanet-locally\"}}>{`Expert: Running a Multi-Node AlphaNet locally`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"em\" components={components} parentName=\"p\">{`Note: This is advanced functionality which may be more brittle than usual. It is not necessary in order to simply write contracts. Proceed at your own peril.`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Navigate to the root of the project. To start the network from a new state remove the storage:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`rm -rf test1 test2\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`We are going to be using test1 and test2 folders for the storage of the corresponding nodes. So make sure both of them have generated keypairs:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`cargo run --package keystore -- keygen --test-seed alice.near -p test1/storage/keystore/\ncargo run --package keystore -- keygen --test-seed bob.near -p test2/storage/keystore/\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Launch the boot node:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`cargo run --release -- --addr 127.0.0.1:3000 --rpc_port 3030 --base-path=test1 --test-network-key-seed 1 --chain-spec-file ./node/configs/res/testnet_chain.json -a alice.near -k 4mhK4txd8Z5r71iCZ41UguSHuHFKUeCXPHv646DbQPYi\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`The boot node will print the string that we can use to boot from it. For example:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`To boot from this node: 127.0.0.1:3000/GuMriipt4yUXfkZL2z3zLPbYaozkZG6zjV6vg4QruEvY\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Launch the second node using the first one as the boot:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`cargo run --release -- --addr 127.0.0.1:3001 --rpc_port 3031 --base-path=test2 --test-network-key-seed 2 --chain-spec-file ./node/configs/res/testnet_chain.json --boot-nodes 127.0.0.1:3000/GuMriipt4yUXfkZL2z3zLPbYaozkZG6zjV6vg4QruEvY -a bob.near -k 22skMptHjFWNyuEWY22ftn2AbLPSYpmYwGJRGwpNHbTV\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Submit account creation transaction on one node:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`pynear create_account jason 1 --public-key 22skMptHjFWNyuEWY22ftn2AbLPSYpmYwGJRGwpNHbTV\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Verify that the account was created by checking it on the other node:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`pynear view_account -a jason -u http://127.0.0.1:3031/\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"running-more-nodes-locally\"}}>{`Running more nodes locally`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This subsection explains how one can run more than two nodes locally. First, start with the clean storage:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`rm -rf test1 test2 test3 test4\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Generate the spec file:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`cargo run --package alphanet --bin generate_test_spec -- -n 4 -c node/configs/res/mynet_chain.json\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Generate keys for each node:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`cargo run --package keystore -- keygen --test-seed near.0 -p test1/storage/keystore/\ncargo run --package keystore -- keygen --test-seed near.1 -p test2/storage/keystore/\ncargo run --package keystore -- keygen --test-seed near.2 -p test3/storage/keystore/\ncargo run --package keystore -- keygen --test-seed near.3 -p test4/storage/keystore/\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{` In separate terminals run:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`cargo run -- --addr 127.0.0.1:3000 --rpc_port 3030 --base-path=test1 --test-network-key-seed 1 --chain-spec-file ./node/configs/res/mynet_chain.json -a near.0 -k 82M8LNM7AzJHhHKn6hymVW1jBzSwFukHp1dycVcU7MD\ncargo run -- --addr 127.0.0.1:3001 --rpc_port 3031 --base-path=test2 --test-network-key-seed 2 --chain-spec-file ./node/configs/res/mynet_chain.json -a near.1 -k CTVkQMjLyr4QzoXrTDVzfCUp95sCJPwLJZ34JTiekxMV --boot-nodes 127.0.0.1:3000/GuMriipt4yUXfkZL2z3zLPbYaozkZG6zjV6vg4QruEvY\ncargo run -- --addr 127.0.0.1:3002 --rpc_port 3032 --base-path=test3 --test-network-key-seed 3 --chain-spec-file ./node/configs/res/mynet_chain.json -a near.2 -k EJ1DMa6s2ngC5GtZb3Z2DZzat2xFZ34j15VLY37dcdXX --boot-nodes 127.0.0.1:3000/GuMriipt4yUXfkZL2z3zLPbYaozkZG6zjV6vg4QruEvY\ncargo run -- --addr 127.0.0.1:3003 --rpc_port 3033 --base-path=test4 --test-network-key-seed 4 --chain-spec-file ./node/configs/res/mynet_chain.json -a near.3 -k 3DToePHssYc75SsxZgzgVLwXE8XQXKjdpdL7CT7D34UE --boot-nodes 127.0.0.1:3000/GuMriipt4yUXfkZL2z3zLPbYaozkZG6zjV6vg4QruEvY\n`}</MDXTag></MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}