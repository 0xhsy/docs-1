{"version":3,"sources":["webpack:///./src/tutorials/token.mdx"],"names":["MDXContent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","layout","React","Component","_this$props","components","_objectWithoutProperties","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_mdx_js_tag__WEBPACK_IMPORTED_MODULE_1__","name","id","parentName","href"],"mappings":"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","file":"static/js/src-tutorials-token.d362dd3d.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"how-to-issue-your-own-token-erc-20\"}}>{`How to issue your own token (ERC-20)`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We actually have pre-built template with Token Contract, so you can start right away with working code.\nGo to `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://studio.nearprotocol.com/\"}}>{`https://studio.nearprotocol.com/`}</MDXTag>{` and start a new project (fiddle) by selecting Token Smart Contract in AssemblyScript.\nYou can try running this application right away to see the code interacting with the blockchain!`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"erc-20-standard\"}}>{`ERC-20 standard`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The ERC-20 standard is one of Ethereum's most popular standards. It defines how custom tokens should be built.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Specifically, any new token must follow next interface:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`totalSupply(): uint256`}</MDXTag>{` - View function that returns the total token supply.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`balanceOf(owner: address): uint256`}</MDXTag>{` - View function that returns the account balance of another account with address `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`owner`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`transfer(to: address, value: uint256)`}</MDXTag>{` - Send `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`value`}</MDXTag>{` amount of tokens to address `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`to`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`transferFrom(from: address, to: address, value: uint256)`}</MDXTag>{` - Send `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`value`}</MDXTag>{` amount of tokens from address `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`from`}</MDXTag>{` to address `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`to`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`approve(spender: address, value: uint256)`}</MDXTag>{` - Allow `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`spender`}</MDXTag>{` to withdraw from your account, multiple times, up to the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`value`}</MDXTag>{` amount. If this function is called again it overwrites the current allowance with `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`value`}</MDXTag></MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`allowance(owner: address, spender: address): uint256`}</MDXTag>{` - View function, returns the amount which `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`spender`}</MDXTag>{` is still allowed to withdraw from `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`owner`}</MDXTag>{`.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Note, NEAR currently doesn't have native uint256/uint128 so for this tutorial we going to use u64. The support is coming in a few weeks.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"building-basic-token\"}}>{`Building basic token`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Let's start by defining number of tokens (non-dividable units) our token will have.\nThis is a decision point for the developer, and here we will assume we going to have `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`100,000,000`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This way we can implement `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`totalSupply`}</MDXTag>{` function:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`let TOTAL_SUPPLY: u64 = 1000000;\n\nexport function totalSupply(): u64 {\n  return TOTAL_SUPPLY;\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`We also need some way to initialize our contract to award all these tokens to initial owner.\nThis also goes into how to change storage in the smart contract:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`function balanceKey(address: string): string {\n    return \"balance:\" + address;\n}\n\nexport funciton init(): void {\n    let initialOwner = \"my_super_user.near\"\n    if (globalStorage.getItem(\"init\") == null)  {\n        globalStorage.setU64(balanceKey(initialOwner), TOTAL_SUPPLY)\n        globalStorage.setItem(\"init\", \"done\");\n    }\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`In example above we have `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`globalStorage`}</MDXTag>{` object that is accessible by this contract to store data.\nIt's just a key / value storage.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`For storing balances, we prefix owner's address with `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`balance:`}</MDXTag>{` to allow to store different types of information for the owner.\nThe logic here is to check if init was called before and if not to initialize.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Now that it's initialized, we can check the balance of users:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`export function balanceOf(owner: string): u64 {\n    return globalStorage.getU64(balanceKey(owner));\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Let's build harder part, transferring money from current user to somebody else:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{}}>{`export function transfer(to: string, value: u64): boolean {\n    let balance = balanceOf(contractContext.sender);\n    if (value > balance) {\n        return false;\n    }\n    globalStorage.setU64(balanceKey(contractContext.sender), balance - value);\n    globalStorage.setU64(to, globalStorage.getU64(to) + value);\n    return true;\n}\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Note, this is not a view function and it can fail, so we need to return `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`boolean`}</MDXTag>{` to indicate if it was successful.\nWe first check the balance of `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`contractContext.sender`}</MDXTag>{`, which is the user that executed given transaction.\nIf there is not enough money on the balance, we return `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`false`}</MDXTag>{`. Otherwise, subtract `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`value`}</MDXTag>{` from the balance of sender and increment balance of `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`to`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"approve--transferfrom\"}}>{`Approve / TransferFrom`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The second part to allow other parties to transfer funds on your behalf is coming.`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}