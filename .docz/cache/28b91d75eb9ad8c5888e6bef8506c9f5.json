{"remainingRequest":"/Users/eriktrautman/Documents/docs/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/eriktrautman/Documents/docs/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/eriktrautman/Documents/docs/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/eriktrautman/Documents/docs/src/tutorials/oracle.mdx","dependencies":[{"path":"/Users/eriktrautman/Documents/docs/src/tutorials/oracle.mdx","mtime":1548720286461},{"path":"/Users/eriktrautman/Documents/docs/node_modules/cache-loader/dist/cjs.js","mtime":1548721029371},{"path":"/Users/eriktrautman/Documents/docs/node_modules/babel-loader/lib/index.js","mtime":1548721029154}],"contextDependencies":[],"result":["function _typeof(obj){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)===\"object\"||typeof call===\"function\")){return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return self;}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function\");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass);}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}import React from'react';import{MDXTag}from'@mdx-js/tag';var layoutProps={};var MDXContent=/*#__PURE__*/function(_React$Component){_inherits(MDXContent,_React$Component);function MDXContent(props){var _this;_classCallCheck(this,MDXContent);_this=_possibleConstructorReturn(this,_getPrototypeOf(MDXContent).call(this,props));_this.layout=null;return _this;}_createClass(MDXContent,[{key:\"render\",value:function render(){var _this$props=this.props,components=_this$props.components,props=_objectWithoutProperties(_this$props,[\"components\"]);return React.createElement(MDXTag,{name:\"wrapper\",components:components},React.createElement(MDXTag,{name:\"h1\",components:components,props:{\"id\":\"writing-an-oracle\"}},\"Writing an Oracle\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Decentralized apps are great for running verifiable computation, dealing with money and assets and have trust into the results.\\nBut the only operations that such app can do involve internal data, transaction data and other decentralized apps.\\nOracles are the way to use data from internet as a whole, or call some external non-blockchain service (price feed, DNS server, etc).\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Oracle is a service that runs outside of the blockchain, consumes events from both internet and blockchain and can post information to both as well.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Examples:\"),React.createElement(MDXTag,{name:\"ul\",components:components},React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Price feed - reads price for some currency and posts it on the blockchain. Used for building stable coins, prediction markets and others.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Sensor feed - sensors in the wild record information and post it into the blockchain.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"External service validation, such as Twitter account or DNS name - on posting of the account on the blockchain, this oracle will get the posted info, validate it via the web2 service and then post result back into blockchain.\"),React.createElement(MDXTag,{name:\"li\",components:components,parentName:\"ul\"},\"Outbound oracle - allows to send information from blockchain into the web2. For example on receival of payment in blockchain to perform some operation in web2 service.\")),React.createElement(MDXTag,{name:\"p\",components:components},\"For some of the applications a single oracles is enough to provide required functionality. For example if you are budiling an e-commerce website and want to accept payments from the blockchain, you can implement outbound oracle that runs on your server.\\nOther cases are when data consumed from outside world inside the blockchain must be accurate as there are some incentive to falsify it.\\nFor example, price feed should be provided by multiple independent entities and then a basic consensus done on what is the actual price at the moment.\"),React.createElement(MDXTag,{name:\"p\",components:components},\"In this tutorial we will start by building a price feed oracle, starting from single oracle providing data and extending it to multi-oracle system.\"),React.createElement(MDXTag,{name:\"h2\",components:components,props:{\"id\":\"step-1----build-smart-contract-to-host-the-price\"}},\"Step 1 -- Build smart contract to host the price\"),React.createElement(MDXTag,{name:\"p\",components:components},\"Coming soon!\"));}}]);return MDXContent;}(React.Component);export{MDXContent as default};MDXContent.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"MDXContent\"};",{"version":3,"sources":["/Users/eriktrautman/Documents/docs/src/tutorials/oracle.mdx"],"names":["React","MDXTag","layoutProps","MDXContent","props","layout","components","Component"],"mappings":"omFACE,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,KAAuB,aAAvB,CAGF,GAAMC,CAAAA,WAAW,CAAG,EAApB,C,GAGqBC,CAAAA,U,gFACnB,oBAAYC,KAAZ,CAAmB,4CACjB,4EAAMA,KAAN,GACA,MAAKC,MAAL,CAAc,IAAd,CAFiB,aAGlB,C,8DACQ,iBAC0B,KAAKD,KAD/B,CACCE,UADD,aACCA,UADD,CACgBF,KADhB,sDAGP,MAAO,qBAAC,MAAD,EACE,IAAI,CAAC,SADP,CAGE,UAAU,CAAEE,UAHd,EAG0B,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,mBAAN,CAAjD,sBAH1B,CAIX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,+XAJW,CAOX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,yJAPW,CAQX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,cARW,CASX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,EACA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,8IADA,CAEA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,0FAFA,CAGA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,sOAHA,CAIA,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,UAAU,CAAC,IAArD,4KAJA,CATW,CAeX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,miBAfW,CAkBX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,wJAlBW,CAmBX,oBAAC,MAAD,EAAQ,IAAI,CAAC,IAAb,CAAkB,UAAU,CAAEA,UAA9B,CAA0C,KAAK,CAAE,CAAC,KAAK,kDAAN,CAAjD,qDAnBW,CAoBX,oBAAC,MAAD,EAAQ,IAAI,CAAC,GAAb,CAAiB,UAAU,CAAEA,UAA7B,iBApBW,CAAP,CAsBD,C,wBA9BqCN,KAAK,CAACO,S,SAAzBJ,U","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"writing-an-oracle\"}}>{`Writing an Oracle`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Decentralized apps are great for running verifiable computation, dealing with money and assets and have trust into the results.\nBut the only operations that such app can do involve internal data, transaction data and other decentralized apps.\nOracles are the way to use data from internet as a whole, or call some external non-blockchain service (price feed, DNS server, etc).`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Oracle is a service that runs outside of the blockchain, consumes events from both internet and blockchain and can post information to both as well.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Examples:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Price feed - reads price for some currency and posts it on the blockchain. Used for building stable coins, prediction markets and others.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Sensor feed - sensors in the wild record information and post it into the blockchain.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`External service validation, such as Twitter account or DNS name - on posting of the account on the blockchain, this oracle will get the posted info, validate it via the web2 service and then post result back into blockchain.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Outbound oracle - allows to send information from blockchain into the web2. For example on receival of payment in blockchain to perform some operation in web2 service.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`For some of the applications a single oracles is enough to provide required functionality. For example if you are budiling an e-commerce website and want to accept payments from the blockchain, you can implement outbound oracle that runs on your server.\nOther cases are when data consumed from outside world inside the blockchain must be accurate as there are some incentive to falsify it.\nFor example, price feed should be provided by multiple independent entities and then a basic consensus done on what is the actual price at the moment.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In this tutorial we will start by building a price feed oracle, starting from single oracle providing data and extending it to multi-oracle system.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"step-1----build-smart-contract-to-host-the-price\"}}>{`Step 1 -- Build smart contract to host the price`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Coming soon!`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "]}]}